//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_Class_Class", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Yiku.Models.DataBase.ClassM), "Class1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.ClassM), true)]
[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_T_Classify_Class", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Yiku.Models.DataBase.ClassM), "T_Classify", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.T_Classify), true)]
[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_Item_Publisher", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Yiku.Models.DataBase.User), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.Item), true)]
[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_Order_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Yiku.Models.DataBase.Item), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.Order), true)]
[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_Picture_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Yiku.Models.DataBase.Item), "Picture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.Picture), true)]
[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_T_Classify_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Yiku.Models.DataBase.Item), "T_Classify", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.T_Classify), true)]
[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_T_Collection_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Yiku.Models.DataBase.Item), "T_Collection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.T_Collection), true)]
[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_T_Shopping_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Yiku.Models.DataBase.Item), "T_Shopping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.T_Shopping), true)]
[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_Order_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Yiku.Models.DataBase.User), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.Order), true)]
[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_T_Collection_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Yiku.Models.DataBase.User), "T_Collection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.T_Collection), true)]
[assembly: EdmRelationshipAttribute("YikuDataModel", "FK_T_Shopping_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Yiku.Models.DataBase.User), "T_Shopping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Yiku.Models.DataBase.T_Shopping), true)]

#endregion

namespace Yiku.Models.DataBase
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class YikuDataEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“YikuDataEntities”部分中的连接字符串初始化新 YikuDataEntities 对象。
        /// </summary>
        public YikuDataEntities() : base("name=YikuDataEntities", "YikuDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 YikuDataEntities 对象。
        /// </summary>
        public YikuDataEntities(string connectionString) : base(connectionString, "YikuDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 YikuDataEntities 对象。
        /// </summary>
        public YikuDataEntities(EntityConnection connection) : base(connection, "YikuDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ClassM> ClassMs
        {
            get
            {
                if ((_ClassMs == null))
                {
                    _ClassMs = base.CreateObjectSet<ClassM>("ClassMs");
                }
                return _ClassMs;
            }
        }
        private ObjectSet<ClassM> _ClassMs;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Picture> Pictures
        {
            get
            {
                if ((_Pictures == null))
                {
                    _Pictures = base.CreateObjectSet<Picture>("Pictures");
                }
                return _Pictures;
            }
        }
        private ObjectSet<Picture> _Pictures;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<T_Classify> T_Classify
        {
            get
            {
                if ((_T_Classify == null))
                {
                    _T_Classify = base.CreateObjectSet<T_Classify>("T_Classify");
                }
                return _T_Classify;
            }
        }
        private ObjectSet<T_Classify> _T_Classify;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<T_Collection> T_Collection
        {
            get
            {
                if ((_T_Collection == null))
                {
                    _T_Collection = base.CreateObjectSet<T_Collection>("T_Collection");
                }
                return _T_Collection;
            }
        }
        private ObjectSet<T_Collection> _T_Collection;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<T_Shopping> T_Shopping
        {
            get
            {
                if ((_T_Shopping == null))
                {
                    _T_Shopping = base.CreateObjectSet<T_Shopping>("T_Shopping");
                }
                return _T_Shopping;
            }
        }
        private ObjectSet<T_Shopping> _T_Shopping;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 ClassMs EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToClassMs(ClassM classM)
        {
            base.AddObject("ClassMs", classM);
        }
    
        /// <summary>
        /// 用于向 Items EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// 用于向 Orders EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// 用于向 Pictures EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPictures(Picture picture)
        {
            base.AddObject("Pictures", picture);
        }
    
        /// <summary>
        /// 用于向 T_Classify EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_Classify(T_Classify t_Classify)
        {
            base.AddObject("T_Classify", t_Classify);
        }
    
        /// <summary>
        /// 用于向 T_Collection EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_Collection(T_Collection t_Collection)
        {
            base.AddObject("T_Collection", t_Collection);
        }
    
        /// <summary>
        /// 用于向 T_Shopping EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_Shopping(T_Shopping t_Shopping)
        {
            base.AddObject("T_Shopping", t_Shopping);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YikuDataModel", Name="ClassM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClassM : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ClassM 对象。
        /// </summary>
        /// <param name="cID">CID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static ClassM CreateClassM(global::System.Int32 cID, global::System.String name)
        {
            ClassM classM = new ClassM();
            classM.CID = cID;
            classM.Name = name;
            return classM;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CID
        {
            get
            {
                return _CID;
            }
            set
            {
                if (_CID != value)
                {
                    OnCIDChanging(value);
                    ReportPropertyChanging("CID");
                    _CID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CID");
                    OnCIDChanged();
                }
            }
        }
        private global::System.Int32 _CID;
        partial void OnCIDChanging(global::System.Int32 value);
        partial void OnCIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FatherID
        {
            get
            {
                return _FatherID;
            }
            set
            {
                OnFatherIDChanging(value);
                ReportPropertyChanging("FatherID");
                _FatherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FatherID");
                OnFatherIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FatherID;
        partial void OnFatherIDChanging(Nullable<global::System.Int32> value);
        partial void OnFatherIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_Class_Class", "Class1")]
        public EntityCollection<ClassM> Class1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassM>("YikuDataModel.FK_Class_Class", "Class1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassM>("YikuDataModel.FK_Class_Class", "Class1", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_Class_Class", "Class")]
        public ClassM Class2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassM>("YikuDataModel.FK_Class_Class", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassM>("YikuDataModel.FK_Class_Class", "Class").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClassM> Class2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassM>("YikuDataModel.FK_Class_Class", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClassM>("YikuDataModel.FK_Class_Class", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Classify_Class", "T_Classify")]
        public EntityCollection<T_Classify> T_Classify
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_Classify>("YikuDataModel.FK_T_Classify_Class", "T_Classify");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_Classify>("YikuDataModel.FK_T_Classify_Class", "T_Classify", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YikuDataModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Item 对象。
        /// </summary>
        /// <param name="iID">IID 属性的初始值。</param>
        /// <param name="publisherID">PublisherID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="detail">Detail 属性的初始值。</param>
        /// <param name="stock">Stock 属性的初始值。</param>
        /// <param name="volume">Volume 属性的初始值。</param>
        /// <param name="price">Price 属性的初始值。</param>
        /// <param name="timeCreate">TimeCreate 属性的初始值。</param>
        /// <param name="exist">Exist 属性的初始值。</param>
        public static Item CreateItem(global::System.Int32 iID, global::System.Int32 publisherID, global::System.String name, global::System.String detail, global::System.Int32 stock, global::System.Int32 volume, global::System.Decimal price, global::System.DateTime timeCreate, global::System.Boolean exist)
        {
            Item item = new Item();
            item.IID = iID;
            item.PublisherID = publisherID;
            item.Name = name;
            item.Detail = detail;
            item.Stock = stock;
            item.Volume = volume;
            item.Price = price;
            item.TimeCreate = timeCreate;
            item.Exist = exist;
            return item;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IID
        {
            get
            {
                return _IID;
            }
            set
            {
                if (_IID != value)
                {
                    OnIIDChanging(value);
                    ReportPropertyChanging("IID");
                    _IID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IID");
                    OnIIDChanged();
                }
            }
        }
        private global::System.Int32 _IID;
        partial void OnIIDChanging(global::System.Int32 value);
        partial void OnIIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PublisherID
        {
            get
            {
                return _PublisherID;
            }
            set
            {
                OnPublisherIDChanging(value);
                ReportPropertyChanging("PublisherID");
                _PublisherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublisherID");
                OnPublisherIDChanged();
            }
        }
        private global::System.Int32 _PublisherID;
        partial void OnPublisherIDChanging(global::System.Int32 value);
        partial void OnPublisherIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Detail
        {
            get
            {
                return _Detail;
            }
            set
            {
                OnDetailChanging(value);
                ReportPropertyChanging("Detail");
                _Detail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Detail");
                OnDetailChanged();
            }
        }
        private global::System.String _Detail;
        partial void OnDetailChanging(global::System.String value);
        partial void OnDetailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Stock
        {
            get
            {
                return _Stock;
            }
            set
            {
                OnStockChanging(value);
                ReportPropertyChanging("Stock");
                _Stock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stock");
                OnStockChanged();
            }
        }
        private global::System.Int32 _Stock;
        partial void OnStockChanging(global::System.Int32 value);
        partial void OnStockChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Int32 _Volume;
        partial void OnVolumeChanging(global::System.Int32 value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeCreate
        {
            get
            {
                return _TimeCreate;
            }
            set
            {
                OnTimeCreateChanging(value);
                ReportPropertyChanging("TimeCreate");
                _TimeCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeCreate");
                OnTimeCreateChanged();
            }
        }
        private global::System.DateTime _TimeCreate;
        partial void OnTimeCreateChanging(global::System.DateTime value);
        partial void OnTimeCreateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cut
        {
            get
            {
                return _Cut;
            }
            set
            {
                OnCutChanging(value);
                ReportPropertyChanging("Cut");
                _Cut = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cut");
                OnCutChanged();
            }
        }
        private global::System.String _Cut;
        partial void OnCutChanging(global::System.String value);
        partial void OnCutChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Exist
        {
            get
            {
                return _Exist;
            }
            set
            {
                OnExistChanging(value);
                ReportPropertyChanging("Exist");
                _Exist = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Exist");
                OnExistChanged();
            }
        }
        private global::System.Boolean _Exist;
        partial void OnExistChanging(global::System.Boolean value);
        partial void OnExistChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_Item_Publisher", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_Item_Publisher", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_Item_Publisher", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_Item_Publisher", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("YikuDataModel.FK_Item_Publisher", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_Order_Item", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("YikuDataModel.FK_Order_Item", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("YikuDataModel.FK_Order_Item", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_Picture_Item", "Picture")]
        public EntityCollection<Picture> Pictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Picture>("YikuDataModel.FK_Picture_Item", "Picture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Picture>("YikuDataModel.FK_Picture_Item", "Picture", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Classify_Item", "T_Classify")]
        public EntityCollection<T_Classify> T_Classify
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_Classify>("YikuDataModel.FK_T_Classify_Item", "T_Classify");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_Classify>("YikuDataModel.FK_T_Classify_Item", "T_Classify", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Collection_Item", "T_Collection")]
        public EntityCollection<T_Collection> T_Collection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_Collection>("YikuDataModel.FK_T_Collection_Item", "T_Collection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_Collection>("YikuDataModel.FK_T_Collection_Item", "T_Collection", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Shopping_Item", "T_Shopping")]
        public EntityCollection<T_Shopping> T_Shopping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_Shopping>("YikuDataModel.FK_T_Shopping_Item", "T_Shopping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_Shopping>("YikuDataModel.FK_T_Shopping_Item", "T_Shopping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YikuDataModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Order 对象。
        /// </summary>
        /// <param name="orID">OrID 属性的初始值。</param>
        /// <param name="uID">UID 属性的初始值。</param>
        /// <param name="iID">IID 属性的初始值。</param>
        /// <param name="count">Count 属性的初始值。</param>
        /// <param name="time">Time 属性的初始值。</param>
        /// <param name="cost">Cost 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        public static Order CreateOrder(global::System.Int32 orID, global::System.Int32 uID, global::System.Int32 iID, global::System.Int32 count, global::System.DateTime time, global::System.Decimal cost, global::System.String state)
        {
            Order order = new Order();
            order.OrID = orID;
            order.UID = uID;
            order.IID = iID;
            order.Count = count;
            order.Time = time;
            order.Cost = cost;
            order.State = state;
            return order;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrID
        {
            get
            {
                return _OrID;
            }
            set
            {
                if (_OrID != value)
                {
                    OnOrIDChanging(value);
                    ReportPropertyChanging("OrID");
                    _OrID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrID");
                    OnOrIDChanged();
                }
            }
        }
        private global::System.Int32 _OrID;
        partial void OnOrIDChanging(global::System.Int32 value);
        partial void OnOrIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.Int32 _UID;
        partial void OnUIDChanging(global::System.Int32 value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IID
        {
            get
            {
                return _IID;
            }
            set
            {
                OnIIDChanging(value);
                ReportPropertyChanging("IID");
                _IID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IID");
                OnIIDChanged();
            }
        }
        private global::System.Int32 _IID;
        partial void OnIIDChanging(global::System.Int32 value);
        partial void OnIIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cut
        {
            get
            {
                return _Cut;
            }
            set
            {
                OnCutChanging(value);
                ReportPropertyChanging("Cut");
                _Cut = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cut");
                OnCutChanged();
            }
        }
        private global::System.String _Cut;
        partial void OnCutChanging(global::System.String value);
        partial void OnCutChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_Order_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_Order_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_Order_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_Order_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("YikuDataModel.FK_Order_Item", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_Order_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_Order_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_Order_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_Order_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("YikuDataModel.FK_Order_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YikuDataModel", Name="Picture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Picture : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Picture 对象。
        /// </summary>
        /// <param name="pID">PID 属性的初始值。</param>
        /// <param name="route">Route 属性的初始值。</param>
        /// <param name="iID">IID 属性的初始值。</param>
        public static Picture CreatePicture(global::System.Int32 pID, global::System.String route, global::System.Int32 iID)
        {
            Picture picture = new Picture();
            picture.PID = pID;
            picture.Route = route;
            picture.IID = iID;
            return picture;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PID
        {
            get
            {
                return _PID;
            }
            set
            {
                if (_PID != value)
                {
                    OnPIDChanging(value);
                    ReportPropertyChanging("PID");
                    _PID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PID");
                    OnPIDChanged();
                }
            }
        }
        private global::System.Int32 _PID;
        partial void OnPIDChanging(global::System.Int32 value);
        partial void OnPIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Route
        {
            get
            {
                return _Route;
            }
            set
            {
                OnRouteChanging(value);
                ReportPropertyChanging("Route");
                _Route = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Route");
                OnRouteChanged();
            }
        }
        private global::System.String _Route;
        partial void OnRouteChanging(global::System.String value);
        partial void OnRouteChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IID
        {
            get
            {
                return _IID;
            }
            set
            {
                OnIIDChanging(value);
                ReportPropertyChanging("IID");
                _IID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IID");
                OnIIDChanged();
            }
        }
        private global::System.Int32 _IID;
        partial void OnIIDChanging(global::System.Int32 value);
        partial void OnIIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_Picture_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_Picture_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_Picture_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_Picture_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("YikuDataModel.FK_Picture_Item", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YikuDataModel", Name="T_Classify")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_Classify : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 T_Classify 对象。
        /// </summary>
        /// <param name="t_Cl_ID">T_Cl_ID 属性的初始值。</param>
        /// <param name="iID">IID 属性的初始值。</param>
        /// <param name="cID">CID 属性的初始值。</param>
        public static T_Classify CreateT_Classify(global::System.Int32 t_Cl_ID, global::System.Int32 iID, global::System.Int32 cID)
        {
            T_Classify t_Classify = new T_Classify();
            t_Classify.T_Cl_ID = t_Cl_ID;
            t_Classify.IID = iID;
            t_Classify.CID = cID;
            return t_Classify;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 T_Cl_ID
        {
            get
            {
                return _T_Cl_ID;
            }
            set
            {
                if (_T_Cl_ID != value)
                {
                    OnT_Cl_IDChanging(value);
                    ReportPropertyChanging("T_Cl_ID");
                    _T_Cl_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("T_Cl_ID");
                    OnT_Cl_IDChanged();
                }
            }
        }
        private global::System.Int32 _T_Cl_ID;
        partial void OnT_Cl_IDChanging(global::System.Int32 value);
        partial void OnT_Cl_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IID
        {
            get
            {
                return _IID;
            }
            set
            {
                OnIIDChanging(value);
                ReportPropertyChanging("IID");
                _IID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IID");
                OnIIDChanged();
            }
        }
        private global::System.Int32 _IID;
        partial void OnIIDChanging(global::System.Int32 value);
        partial void OnIIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CID
        {
            get
            {
                return _CID;
            }
            set
            {
                OnCIDChanging(value);
                ReportPropertyChanging("CID");
                _CID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CID");
                OnCIDChanged();
            }
        }
        private global::System.Int32 _CID;
        partial void OnCIDChanging(global::System.Int32 value);
        partial void OnCIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Classify_Class", "Class")]
        public ClassM Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassM>("YikuDataModel.FK_T_Classify_Class", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassM>("YikuDataModel.FK_T_Classify_Class", "Class").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClassM> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassM>("YikuDataModel.FK_T_Classify_Class", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClassM>("YikuDataModel.FK_T_Classify_Class", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Classify_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_T_Classify_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_T_Classify_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_T_Classify_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("YikuDataModel.FK_T_Classify_Item", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YikuDataModel", Name="T_Collection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_Collection : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 T_Collection 对象。
        /// </summary>
        /// <param name="t_Co_ID">T_Co_ID 属性的初始值。</param>
        /// <param name="uID">UID 属性的初始值。</param>
        /// <param name="iID">IID 属性的初始值。</param>
        public static T_Collection CreateT_Collection(global::System.Int32 t_Co_ID, global::System.Int32 uID, global::System.Int32 iID)
        {
            T_Collection t_Collection = new T_Collection();
            t_Collection.T_Co_ID = t_Co_ID;
            t_Collection.UID = uID;
            t_Collection.IID = iID;
            return t_Collection;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 T_Co_ID
        {
            get
            {
                return _T_Co_ID;
            }
            set
            {
                if (_T_Co_ID != value)
                {
                    OnT_Co_IDChanging(value);
                    ReportPropertyChanging("T_Co_ID");
                    _T_Co_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("T_Co_ID");
                    OnT_Co_IDChanged();
                }
            }
        }
        private global::System.Int32 _T_Co_ID;
        partial void OnT_Co_IDChanging(global::System.Int32 value);
        partial void OnT_Co_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.Int32 _UID;
        partial void OnUIDChanging(global::System.Int32 value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IID
        {
            get
            {
                return _IID;
            }
            set
            {
                OnIIDChanging(value);
                ReportPropertyChanging("IID");
                _IID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IID");
                OnIIDChanged();
            }
        }
        private global::System.Int32 _IID;
        partial void OnIIDChanging(global::System.Int32 value);
        partial void OnIIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Collection_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_T_Collection_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_T_Collection_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_T_Collection_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("YikuDataModel.FK_T_Collection_Item", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Collection_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_T_Collection_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_T_Collection_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_T_Collection_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("YikuDataModel.FK_T_Collection_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YikuDataModel", Name="T_Shopping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_Shopping : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 T_Shopping 对象。
        /// </summary>
        /// <param name="t_Sh_ID">T_Sh_ID 属性的初始值。</param>
        /// <param name="uID">UID 属性的初始值。</param>
        /// <param name="iID">IID 属性的初始值。</param>
        /// <param name="count">Count 属性的初始值。</param>
        public static T_Shopping CreateT_Shopping(global::System.Int32 t_Sh_ID, global::System.Int32 uID, global::System.Int32 iID, global::System.Int32 count)
        {
            T_Shopping t_Shopping = new T_Shopping();
            t_Shopping.T_Sh_ID = t_Sh_ID;
            t_Shopping.UID = uID;
            t_Shopping.IID = iID;
            t_Shopping.Count = count;
            return t_Shopping;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 T_Sh_ID
        {
            get
            {
                return _T_Sh_ID;
            }
            set
            {
                if (_T_Sh_ID != value)
                {
                    OnT_Sh_IDChanging(value);
                    ReportPropertyChanging("T_Sh_ID");
                    _T_Sh_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("T_Sh_ID");
                    OnT_Sh_IDChanged();
                }
            }
        }
        private global::System.Int32 _T_Sh_ID;
        partial void OnT_Sh_IDChanging(global::System.Int32 value);
        partial void OnT_Sh_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.Int32 _UID;
        partial void OnUIDChanging(global::System.Int32 value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IID
        {
            get
            {
                return _IID;
            }
            set
            {
                OnIIDChanging(value);
                ReportPropertyChanging("IID");
                _IID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IID");
                OnIIDChanged();
            }
        }
        private global::System.Int32 _IID;
        partial void OnIIDChanging(global::System.Int32 value);
        partial void OnIIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cut
        {
            get
            {
                return _Cut;
            }
            set
            {
                OnCutChanging(value);
                ReportPropertyChanging("Cut");
                _Cut = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cut");
                OnCutChanged();
            }
        }
        private global::System.String _Cut;
        partial void OnCutChanging(global::System.String value);
        partial void OnCutChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Shopping_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_T_Shopping_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_T_Shopping_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("YikuDataModel.FK_T_Shopping_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("YikuDataModel.FK_T_Shopping_Item", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Shopping_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_T_Shopping_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_T_Shopping_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("YikuDataModel.FK_T_Shopping_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("YikuDataModel.FK_T_Shopping_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YikuDataModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="uID">UID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="point">Point 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 uID, global::System.String name, global::System.Int64 point)
        {
            User user = new User();
            user.UID = uID;
            user.Name = name;
            user.Point = point;
            return user;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Int32 _UID;
        partial void OnUIDChanging(global::System.Int32 value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Point
        {
            get
            {
                return _Point;
            }
            set
            {
                OnPointChanging(value);
                ReportPropertyChanging("Point");
                _Point = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Point");
                OnPointChanged();
            }
        }
        private global::System.Int64 _Point;
        partial void OnPointChanging(global::System.Int64 value);
        partial void OnPointChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Consignee
        {
            get
            {
                return _Consignee;
            }
            set
            {
                OnConsigneeChanging(value);
                ReportPropertyChanging("Consignee");
                _Consignee = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Consignee");
                OnConsigneeChanged();
            }
        }
        private global::System.String _Consignee;
        partial void OnConsigneeChanging(global::System.String value);
        partial void OnConsigneeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tel
        {
            get
            {
                return _Tel;
            }
            set
            {
                OnTelChanging(value);
                ReportPropertyChanging("Tel");
                _Tel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tel");
                OnTelChanged();
            }
        }
        private global::System.String _Tel;
        partial void OnTelChanging(global::System.String value);
        partial void OnTelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_Item_Publisher", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("YikuDataModel.FK_Item_Publisher", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("YikuDataModel.FK_Item_Publisher", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_Order_User", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("YikuDataModel.FK_Order_User", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("YikuDataModel.FK_Order_User", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Collection_User", "T_Collection")]
        public EntityCollection<T_Collection> T_Collection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_Collection>("YikuDataModel.FK_T_Collection_User", "T_Collection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_Collection>("YikuDataModel.FK_T_Collection_User", "T_Collection", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("YikuDataModel", "FK_T_Shopping_User", "T_Shopping")]
        public EntityCollection<T_Shopping> T_Shopping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_Shopping>("YikuDataModel.FK_T_Shopping_User", "T_Shopping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_Shopping>("YikuDataModel.FK_T_Shopping_User", "T_Shopping", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
